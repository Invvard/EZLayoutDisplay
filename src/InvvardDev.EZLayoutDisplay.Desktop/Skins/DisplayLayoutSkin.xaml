<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <Style x:Key="ToggleButtonPinWindowStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true" HorizontalAlignment="Right" Cursor="Hand">
                        <StackPanel Width="100" VerticalAlignment="Center" Orientation="Horizontal" Margin="5,0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Image x:Name="toggleIcon" Height="{TemplateBinding Height}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10,0,0,0"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Source" TargetName="toggleIcon" Value="/InvvardDev.EZLayoutDisplay.Desktop;component/Skins/Images/pin.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Source" TargetName="toggleIcon" Value="/InvvardDev.EZLayoutDisplay.Desktop;component/Skins/Images/pin.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            <Setter Property="Source" TargetName="toggleIcon" Value="/InvvardDev.EZLayoutDisplay.Desktop;component/Skins/Images/pin.remove.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            <Setter Property="Source" TargetName="toggleIcon" Value="/InvvardDev.EZLayoutDisplay.Desktop;component/Skins/Images/pin.remove.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="StackPanel" x:Key="SpLayerNameStyle">
        <Setter Property="Width" Value="180" />
        <Setter Property="Margin" Value="0,25,0,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style TargetType="StackPanel" x:Key="SpControlHintStyle">
        <Setter Property="Margin" Value="0,0,10,10" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <Style TargetType="TextBlock" x:Key="TextblockLayerNameStyle">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource TextblockLayerNameStyle}" x:Key="TbLayerNameTitleStyle">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#BBB" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource TextblockLayerNameStyle}" x:Key="TbLayerNameStyle">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#555" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource TextblockLayerNameStyle}" x:Key="TbControlHintStyle">
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Foreground" Value="#555" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    

</ResourceDictionary>